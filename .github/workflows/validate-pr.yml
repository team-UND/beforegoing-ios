name: Validate PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  SCHEME_NAME: ${{ vars.SCHEME_NAME }}

permissions:
  contents: read

jobs:
  swiftlint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1

  build-and-analyze:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Clean DerivedData
        run: |
          rm -rf DerivedData
          rm -rf .build
          mkdir -p DerivedData

      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: ${{ runner.os }}-spm-

      - name: Resolve dependencies
        run: |
          xcodebuild -project BeforeGoing.xcodeproj \
            -scheme "${{ env.SCHEME_NAME }}" \
            -derivedDataPath DerivedData \
            -resolvePackageDependencies

      - name: Build and Test
        run: |
          xcodebuild -project BeforeGoing.xcodeproj \
            -scheme "${{ env.SCHEME_NAME }}" \
            -destination 'platform=iOS Simulator,OS=18.2,name=iPhone 16' \
            -configuration Debug \
            -derivedDataPath DerivedData \
            clean build

          xcodebuild -project BeforeGoing.xcodeproj \
            -scheme "${{ env.SCHEME_NAME }}" \
            -destination 'platform=iOS Simulator,OS=18.2,name=iPhone 16' \
            -configuration Debug \
            -derivedDataPath DerivedData \
            -enableCodeCoverage YES \
            test \
            -resultBundlePath TestResults.xcresult

      - name: Generate Coverage Report
        run: |
          if [ ! -f "TestResults.xcresult" ]; then
            echo "[ERROR]: TestResults.xcresult not found"
            exit 1
          fi

          if [ ! -f "scripts/convert_coverage.py" ]; then
            echo "[ERROR]: Coverage conversion script not found"
            exit 1
          fi

          xcrun xccov view --report --json TestResults.xcresult > coverage.json
          python3 scripts/convert_coverage.py coverage.json sonarqube-generic-coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: [swiftlint, build-and-analyze]
    if: always()

    steps:
      - name: Send Success Message
        if: ${{ needs.swiftlint.result == 'success' && needs.build-and-analyze.result == 'success' }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "We got a new pull request üëè"
        env:
          DISCORD_WEBHOOK: ${{ env.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: |
            [
              {
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}"
                },
                "title": "#${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}",
                "color": 10478271,
                "description": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Base Branch",
                    "value": "${{ github.base_ref }}",
                    "inline": true
                  },
                  {
                    "name": "Compare Branch",
                    "value": "${{ github.head_ref }}",
                    "inline": true
                  }
                ]
              }
            ]

      - name: Send Failure Message
        if: ${{ needs.swiftlint.result != 'success' || needs.build-and-analyze.result != 'success' }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "The pull request failed. Please resolve the issue and try again üëΩ"
        env:
          DISCORD_WEBHOOK: ${{ env.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: |
            [
              {
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}"
                },
                "title": "#${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}",
                "color": 13458524,
                "description": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Base Branch",
                    "value": "${{ github.base_ref }}",
                    "inline": true
                  },
                  {
                    "name": "Compare Branch",
                    "value": "${{ github.head_ref }}",
                    "inline": true
                  }
                ]
              }
            ]